import java.util.regex.Pattern

def doExtractStringFromManifest(name) {
    def manifestFile = file(android.sourceSets.main.manifest.srcFile)
    def pattern = Pattern.compile(name + "=\"(.*?)\"")
    def matcher = pattern.matcher(manifestFile.getText())
    matcher.find()
    return matcher.group(1)
}

def minSdkVersion = 16

if(cdvMinSdkVersion == null) {
    ext.cdvMinSdkVersion = minSdkVersion;
} else if (cdvMinSdkVersion.toInteger() < minSdkVersion) {
    ext.cdvMinSdkVersion = minSdkVersion;
}

buildscript {
     repositories {
         jcenter()
     }
     dependencies {
         classpath 'com.android.tools.build:gradle:1.5.0'

         classpath 'me.tatarka:gradle-retrolambda:3.3.0-beta4'

     }
 }

 allprojects {
     repositories {
         jcenter()
         mavenCentral()
         maven {
            url 'https://repo.adobe.com/nexus/content/repositories/releases/'
         }
         maven {
            url 'http://maven.localytics.com/public'
        }
     }
 }

 android {
     sourceSets {
         main {
             manifest.srcFile 'AndroidManifest.xml'
         }
     }

    defaultConfig {
        applicationId = doExtractStringFromManifest("package")
        multiDexEnabled true
        manifestPlaceholders = [appPackageName: "${applicationId}"]
    }

    dexOptions {
        jumboMode true
    }

     packagingOptions {
         exclude 'META-INF/LICENSE.txt'
         exclude 'META-INF/LICENSE'
         exclude 'META-INF/NOTICE.txt'
         exclude 'META-INF/NOTICE'
         exclude 'META-INF/DEPENDENCIES'
         pickFirst 'AndroidManifest.xml'
     }
 }
